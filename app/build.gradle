apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.d27.qr"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // 키스토어 셋팅
    File signFile = rootProject.file('keystore.properties')
    if (signFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signFile))
        signingConfigs {
            release {
                storeFile rootProject.file(properties['keystore'])
                storePassword properties['storePassword']
                keyAlias properties['keyAlias']
                keyPassword properties['keyPassword']
            }
        }
    }
    //buildType
    buildTypes {
        debug {
            // 개발여부설정 : true
            buildConfigField 'boolean', 'DEV', "true"
            // 디버그앱 이름 설정
            manifestPlaceholders = [appName: "QRQR_DEV"]
        }
        release {
            // 키스토어 셋팅
            signingConfig signingConfigs.release

            // 개발여부설정 : false
            buildConfigField 'boolean', 'DEV', "false"

            // 릴리즈앱 이름 설정
            manifestPlaceholders = [appName: "QRQR"]

            // 소스 및 리소스 축소 : 시간이 많이 걸림
//            shrinkResources true
//            minifyEnabled true
            // APK 생성 에러시 proguard-android 사용
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    project.ext {
                        prefix = 'qrqr'
                        extention = 'apk'
                    }
                    // gssupermarket-release-v1.0.0.apk 형태로 파일명 지정
                    outputFileName = "${project.ext.prefix}-release-v${variant.versionName}.${project.ext.extention}"
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "com.airbnb.android:lottie:$lottie_version"

    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    // ML Kit dependencies
    implementation 'com.google.firebase:firebase-ml-vision:24.0.1'
    // Barcode detection model.
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.0.2'
    // Object model
    implementation 'com.google.firebase:firebase-ml-vision-object-detection-model:19.0.3'


    //zxing
    implementation('com.journeyapps:zxing-android-embedded:3.6.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.0'

    // CameraX
    def camerax_version = "1.0.0-alpha03"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation 'com.android.support:design:28.0.0'
}
apply plugin: 'com.google.gms.google-services'